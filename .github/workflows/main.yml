name: docker-compose build,test,deploy to Heroku

on: [push]

jobs:

  build:
    name: build,test
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: config.ci_settings
      CONSUMER_KEY : ${{ secrets.CONSUMER_KEY }}
      CONSUMER_SECRET : ${{ secrets.CONSUMER_SECRET }}
      ACCESS_TOKEN : ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET : ${{ secrets.ACCESS_TOKEN_SECRET }}
      YOUTUBE_API_KEY : ${{ secrets.YOUTUBE_API_KEY }}

    steps:
    - uses: actions/checkout@v1
    - name: Build the docker-compose stack
      run: docker-compose -f docker-compose.ci.yml up -d
    - name: Check running containers
      run: docker ps -a
    - name: Check logs
      run: docker logs visualizingTweets-django

    # - name: Run test suite
      # run: docker exec visualizingTweets-django python manage.py test

  deploy:
    name: deploy to Heroku
    runs-on: ubuntu-latest

    needs: [build]
    steps:
    - uses: actions/checkout@v1
    - name: Push to Heroku
      run: git push -f https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP }}.git origin/master:master


  marp-to-pdf:
    name: make slide pdf by Marp
    runs-on: ubuntu-latest

    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update & sudo apt-get install jq
      - run: |
          directory=$(cat config.json | jq -r .directory)
          output_format=$(cat config.json | jq -r .output_format)
          echo "::set-output name=DIR::${directory}"
          echo "::set-output name=FORMAT::${output_format}"
        id: config
      - run: docker run --rm -u root --init -v "$(pwd):/home/marp/app/"
              -e LANG=$LANG marpteam/marp-cli ${{steps.config.outputs.DIR}}/slide.md
              --${{steps.config.outputs.FORMAT}}
              -o ${{steps.config.outputs.DIR}}.${{steps.config.outputs.FORMAT}}
      - uses: actions/upload-artifact@v2
        with:
          name: output_slide
          path: ${{steps.config.outputs.DIR}}.${{steps.config.outputs.FORMAT}}
