version: "3"

services:
  webapp:
    container_name: visualizingTweets-django
    build: ./app
    # restart: on-failure
    command: bash -c "python manage.py runserver 0.0.0.0:8080"
    # command: >
    #   bash -c "python local_manage.py makemigrations
    #   && python local_manage.py migrate
    #   && python local_manage.py collectstatic --noinput
    #   && gunicorn config.local_wsgi -b 0.0.0.0:8080"
    environment:
      - DJANGO_SETTINGS_MODULE=config.local_settings
    env_file: .env
    volumes:
      - .:/code
      - ./static:/opt/static
    ports:
      - 8080:8080
    depends_on:
      - db

  db:
    container_name: visualizingTweets-db
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: visualizingTweets
      MYSQL_PASSWORD: visualizingTweets
      TZ: "Asia/Tokyo"
    volumes:
      - db_volume:/var/lib/mysql
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d # 定義どおりにテーブル作成
      - ./mysql/conf.d:/etc/mysql/conf.d # MySQLの基本設定(文字化け対策)
      # - ./mysql/log:/var/log/mysql # ログの保存

  websrv:
    container_name: visualizingTweets-nginx
    # restart: always
    build: ./nginx
    # image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx_config.conf:/etc/nginx/conf.d/default.conf
      - ./static:/opt/static/
    depends_on:
      - webapp
      - stock_api

  stock_api:
    container_name: stock_api
    build: ./stock-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./stock-service/:/app/
    ports:
      - 8001:8000
    environment:
      - DATABASE_URI=mysql://visualizingTweets:visualizingTweets@db:3306/visualizingTweets
      - CAST_SERVICE_HOST_URL=http://cast_service:8000/api/v1/casts/
    depends_on:
      - db

volumes:
  static:
  db_volume:
